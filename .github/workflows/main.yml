name: Run PyAutoGUI Bot on Windows (20 jobs)

on:
  workflow_dispatch:  # Cho ph√©p b·∫°n ch·∫°y th·ªß c√¥ng t·ª´ GitHub UI
  push:
    branches: [ "main" ]
  schedule:
    - cron: '2,17,32,47 * * * *'

jobs:
  bot-job:
    name: Bot Job ${{ matrix.job_id }}
    runs-on: windows-latest
    timeout-minutes: 13
    strategy:
      matrix:
        job_id: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
      fail-fast: false

    steps:
      - name: ‚¨áÔ∏è Checkout Repo
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: üì¶ Install dependencies
        run: |
          pip install -r requirements.txt

      - name: ‚ñ∂Ô∏è Run bot script
        run: python main.py
      
      - name: ‚ñ∂Ô∏è Run bot script 2
        run: python main.py

      - name: üê≥ Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: üê≥ Pull Docker Image
        run: docker pull nduythanh1/selenium-videozz-multiprocess
     
      - name: ‚ñ∂Ô∏è Run Docker Containers in Parallel
        run: |
          docker run --rm -d \
            --name container1 \
            -e JOB_ID=${{ matrix.job_id }} \
            nduythanh1/selenium-videozz-multiprocess

          docker run --rm -d \
            --name container2 \
            -e JOB_ID=${{ matrix.job_id }} \
            nduythanh1/selenium-videozz-multiprocess

          # ƒê·ª£i c·∫£ 2 container ch·∫°y (t√πy theo c√°ch b·∫°n mu·ªën qu·∫£n l√Ω)
          docker wait container1
          docker wait container2
